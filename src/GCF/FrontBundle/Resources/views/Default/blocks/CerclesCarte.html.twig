<style>
    @keyframes agrandir {
        0% {transform: scale(1,1);} 
        50% {transform :scale(2,2); } 
        100% {transform :scale(3,3); } 
    }
    
    circle {

    }

    circle:hover {
        fill-opacity: 1;
        //fill-width: 0;
        //transform: scale(2);
        //animation : agrandir 5s 0s infinite linear alternate ; 
        //transform-origin : top left ;
    }
    .map-tooltip {
        position: fixed;
        top: 0;
        right: 0;
        width: 100px;
        display: none;
        -webkit-border-radius: 3px;
        -moz-border-radius: 3px;
        border-radius: 3px;
        border:#d3d3d3 solid 1px;
        background: #fff;
        color: black;
        font-size: smaller;
        padding: 8px;
        pointer-events:none;
        box-shadow: 0 8px 17px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    }
</style>
{#map title#}
<div class="row">
    <h4 align="center" style="border-radius: 2px;color: white; background: #4e9100; margin:0 0 10px; padding: 5px 0;"> {{ 'map_titie'|trans }} </h4>
</div>


<svg viewBox=" 0 0 230 487.5"   version="1.1"  class = "button" expanded = "true" xmlns="http://www.w3.org/2000/svg" style="overflow: hidden; position: relative;">
    <g class="map" transform="scale(1.5)">
        {% for i in 1..24 %}
            <a xlink:title="{{ Gouvernorats[i]["name"] }}" id="{{ Gouvernorats[i]["name"] }}" class="HI-map" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">
                <path d="{{ Gouvernorats[i]["map"] }}" ></path><!--  -->
            </a>
        {% endfor %}
    </g>

    <defs>
        <filter id="f1" x="0" y="0">
            <feGaussianBlur in="SourceGraphic" stdDeviation="15" ></feGaussianBlur>
        </filter>
    </defs>

    <defs>
        <filter height="200%" width="200%" y="-50%" x="-50%" id="flou_blur">
            <feGaussianBlur stdDeviation="3" in="SourceGraphic"/>
        </filter>
    </defs>
    {% for Gouv in Gouvs  %}
        {% if Gouv.nbProjets %}
            <!-- 
            <a xlink:title="{{ Gouvernorats[Gouv.idmap]["name"]}} ({{Gouv.nbProjets }})" id="{{ Gouvernorats[Gouv.idmap]["name"] }}" class="HI-map">
            </a>
            -->
            {% if Gouv.nbProjets < interNbProjets %}
                <circle class="HC-map" cx="{{ Gouvernorats[Gouv.idmap]["x"] }}" cy="{{ Gouvernorats[Gouv.idmap]["y"] }}" r="10" fill="green" fill-opacity="0.40"  />

            {% else %}
                <circle class="HC-map" cx="{{ Gouvernorats[Gouv.idmap]["x"] }}" cy="{{ Gouvernorats[Gouv.idmap]["y"] }}" r="{{ ((((Gouv.nbProjets)/interNbProjets)|round(0, 'floor'))+ 0.5 )*10 }}" fill="green" fill-opacity="0.40"  />
            {% endif %}
        {% endif %}
    {% endfor %}
</svg>

<svg style="max-width: 100%; border:solid 1px #e7e7e7; display: flex ;max-height: 90px ">
    <circle cx="30" cy="35" r="{{ (1)*10 }}" fill="green" fill-opacity="0.40"  />
    <text x="10" y="70" fill="black" style="font-size: 13px;">{{ 'from'|trans }} 0 {{ 'to'|trans }} {{(interNbProjets*1)}}</text>

    <circle cx="90" cy="35" r="{{ (1.5)*10 }}" fill="green" fill-opacity="0.40"  />
    <text x="68" y="70" fill="black" style="font-size: 13px;">{{ 'from'|trans }} {{(interNbProjets*1)+1}} {{ 'to'|trans }} {{(interNbProjets*2)}}</text>

    <circle cx="170" cy="35" r="{{ (2)*10 }}" fill="green" fill-opacity="0.40"  />
    <text x="147" y="70" fill="black" style="font-size: 13px;">{{ 'from'|trans }} {{(interNbProjets*2)+1}} {{ 'to'|trans }} {{(interNbProjets*3)}}</text>
</svg>

<div class="map-tooltip">

</div>

<script>

    var tooltip = document.querySelector('.map-tooltip');

    // iterate throw all `path` tags
    [].forEach.call(document.querySelectorAll('a.HI-map'), function(item) {
        // attach click event, you can read the URL from a attribute for example.
        item.addEventListener('click', function(){
            var sel = this;
                pos = sel.getBoundingClientRect();

            var path = '{{ path('gcf_front_projectspage', {'secteurName': 'key' }) }}';
            path = path.replace('key', sel.getAttribute("id"));
            window.open(path, "_self")
        });

        // attach mouseenter event
        item.addEventListener('mouseenter', function() {
            var sel = this,
                // get the borders of the path - see this question: http://stackoverflow.com/q/10643426/863110
                pos = sel.getBoundingClientRect();

            tooltip.style.display = 'block';
            tooltip.style.top = pos.top + 'px';
            tooltip.style.left = pos.left + 'px';

            tooltip.innerHTML = sel.getAttribute("id");
        });

        // when mouse leave hide the tooltip
        item.addEventListener('mouseleave', function(){
            tooltip.style.display = 'none';
        });
    });

    [].forEach.call(document.querySelectorAll('circle.Hc-map'), function(item) {
        // attach click event, you can read the URL from a attribute for example.
        item.addEventListener('click', function(){
            var sel = this;

            var path = '{{ path('gcf_front_projectspage', {'secteurName': 'key' }) }}';
            path = path.replace('key', sel.getAttribute("id"));
            window.open(path)
        });

        // attach mouseenter event
        item.addEventListener('mouseenter', function() {
            var sel = this,
                // get the borders of the path - see this question: http://stackoverflow.com/q/10643426/863110
                pos = sel.getBoundingClientRect();

            tooltip.style.display = 'block';
            tooltip.style.top = pos.top + 'px';
            tooltip.style.left = pos.left + 'px';

            tooltip.innerHTML = sel.getAttribute("id");
        });

        // when mouse leave hide the tooltip
        item.addEventListener('mouseleave', function(){
            tooltip.style.display = 'none';
        });
    });

</script>